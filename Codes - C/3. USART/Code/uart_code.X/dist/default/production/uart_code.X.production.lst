

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov 03 14:34:15 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F628A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001F                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  008C                     	;# 
    78  008E                     	;# 
    79  0092                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009F                     	;# 
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  008C                     	;# 
   115  008E                     	;# 
   116  0092                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009F                     	;# 
   124                           
   125                           	psect	idataBANK0
   126  0624                     __pidataBANK0:	
   127                           
   128                           ;initializer for main@F486
   129  0624  3470               	retlw	112
   130  0625  3471               	retlw	113
   131  0626  3470               	retlw	112
   132  0627  3420               	retlw	32
   133  0628  346F               	retlw	111
   134  0629  3420               	retlw	32
   135  062A  3474               	retlw	116
   136  062B  3468               	retlw	104
   137  062C  3479               	retlw	121
   138  062D  3461               	retlw	97
   139  062E  3467               	retlw	103
   140  062F  346F               	retlw	111
   141  0630  3420               	retlw	32
   142  0631  34E9               	retlw	233
   143  0632  3420               	retlw	32
   144  0633  346D               	retlw	109
   145  0634  3475               	retlw	117
   146  0635  3469               	retlw	105
   147  0636  3474               	retlw	116
   148  0637  346F               	retlw	111
   149  0638  3420               	retlw	32
   150  0639  3466               	retlw	102
   151  063A  346F               	retlw	111
   152  063B  3464               	retlw	100
   153  063C  3461               	retlw	97
   154  0019                     _TXREG	set	25
   155  001A                     _RCREG	set	26
   156  000C                     _PIR1bits	set	12
   157  0018                     _RCSTAbits	set	24
   158  0086                     _TRISBbits	set	134
   159  0099                     _SPBRG	set	153
   160  0098                     _TXSTAbits	set	152
   161                           
   162                           	psect	cinit
   163  07F4                     start_initialization:	
   164                           ; #config settings
   165                           
   166  07F4                     __initialization:	
   167                           
   168                           ; Initialize objects allocated to BANK0
   169  07F4  1383               	bcf	3,7	;select IRP bank0
   170  07F5  306E               	movlw	low (__pdataBANK0+25)
   171  07F6  00FD               	movwf	btemp+-1
   172  07F7  3006               	movlw	high __pidataBANK0
   173  07F8  00FE               	movwf	btemp
   174  07F9  3024               	movlw	low __pidataBANK0
   175  07FA  00FF               	movwf	btemp+1
   176  07FB  3055               	movlw	low __pdataBANK0
   177  07FC  0084               	movwf	4
   178  07FD  2619               	fcall	init_ram0
   179  07FE                     end_of_initialization:	
   180                           ;End of C runtime variable initialization code
   181                           
   182  07FE                     __end_of__initialization:	
   183  07FE  0183               	clrf	3
   184  07FF  2E3D               	ljmp	_main	;jump to C main() function
   185                           
   186                           	psect	dataBANK0
   187  0055                     __pdataBANK0:	
   188  0055                     main@F486:	
   189  0055                     	ds	25
   190                           
   191                           	psect	inittext
   192  0615                     init_fetch0:	
   193                           ;	Called with low address in FSR and high address in W
   194                           
   195  0615  087E               	movf	btemp,w
   196  0616  008A               	movwf	10
   197  0617  087F               	movf	btemp+1,w
   198  0618  0082               	movwf	2
   199  0619                     init_ram0:	
   200                           ;Called with:
   201                           ;	high address of idata address in btemp 
   202                           ;	low address of idata address in btemp+1 
   203                           ;	low address of data in FSR
   204                           ;	high address + 1 of data in btemp-1
   205                           
   206  0619  2615               	fcall	init_fetch0
   207  061A  0080               	movwf	0
   208  061B  0A84               	incf	4,f
   209  061C  0804               	movf	4,w
   210  061D  067D               	xorwf	btemp+-1,w
   211  061E  1903               	btfsc	3,2
   212  061F  3400               	retlw	0
   213  0620  0AFF               	incf	btemp+1,f
   214  0621  1903               	btfsc	3,2
   215  0622  0AFE               	incf	btemp,f
   216  0623  2E19               	goto	init_ram0
   217                           
   218                           	psect	cstackCOMMON
   219  0070                     __pcstackCOMMON:	
   220  0070                     ?_UART_Write:	
   221  0070                     ??_UART_Write:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_main:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ?___aldiv:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     UART_Write@data:	
   231                           ; 4 bytes @ 0x0
   232                           
   233  0070                     ___aldiv@divisor:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           ; 4 bytes @ 0x0
   238  0070                     	ds	4
   239  0074                     ___aldiv@dividend:	
   240                           
   241                           ; 4 bytes @ 0x4
   242  0074                     	ds	4
   243  0078                     ??___aldiv:	
   244                           
   245                           ; 1 bytes @ 0x8
   246  0078                     	ds	1
   247  0079                     UART_Init@x:	
   248                           
   249                           ; 2 bytes @ 0x9
   250  0079                     	ds	2
   251                           
   252                           	psect	cstackBANK0
   253  0020                     __pcstackBANK0:	
   254  0020                     ___aldiv@counter:	
   255                           
   256                           ; 1 bytes @ 0x0
   257  0020                     	ds	1
   258  0021                     ___aldiv@sign:	
   259                           
   260                           ; 1 bytes @ 0x1
   261  0021                     	ds	1
   262  0022                     ___aldiv@quotient:	
   263                           
   264                           ; 4 bytes @ 0x2
   265  0022                     	ds	4
   266  0026                     ?_UART_Init:	
   267  0026                     UART_Init@baudrate:	
   268                           ; 1 bytes @ 0x6
   269                           
   270                           
   271                           ; 4 bytes @ 0x6
   272  0026                     	ds	4
   273  002A                     ??_UART_Init:	
   274                           
   275                           ; 1 bytes @ 0xA
   276  002A                     	ds	12
   277  0036                     ??_main:	
   278                           
   279                           ; 1 bytes @ 0x16
   280  0036                     	ds	4
   281  003A                     main@frase:	
   282                           
   283                           ; 25 bytes @ 0x1A
   284  003A                     	ds	25
   285  0053                     main@i:	
   286                           
   287                           ; 2 bytes @ 0x33
   288  0053                     	ds	2
   289                           
   290                           	psect	maintext
   291  063D                     __pmaintext:	
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 12 in file "code.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;  i               2   51[BANK0 ] int 
   302 ;;  frase          25   26[BANK0 ] unsigned char [25]
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : B00/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   312 ;;      Params:         0       0       0       0
   313 ;;      Locals:         0      27       0       0
   314 ;;      Temps:          0       4       0       0
   315 ;;      Totals:         0      31       0       0
   316 ;;Total ram usage:       31 bytes
   317 ;; Hardware stack levels required when called:    2
   318 ;; This function calls:
   319 ;;		_UART_Init
   320 ;;		_UART_Write
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           
   327                           ;psect for function _main
   328  063D                     _main:	
   329  063D                     l845:	
   330                           ;incstack = 0
   331                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   332                           
   333                           
   334                           ;code.c: 13:     UART_Init(9600);
   335  063D  3000               	movlw	0
   336  063E  1283               	bcf	3,5	;RP0=0, select bank0
   337  063F  1303               	bcf	3,6	;RP1=0, select bank0
   338  0640  00A9               	movwf	UART_Init@baudrate+3
   339  0641  3000               	movlw	0
   340  0642  00A8               	movwf	UART_Init@baudrate+2
   341  0643  3025               	movlw	37
   342  0644  00A7               	movwf	UART_Init@baudrate+1
   343  0645  3080               	movlw	128
   344  0646  00A6               	movwf	UART_Init@baudrate
   345  0647  2724               	fcall	_UART_Init
   346  0648                     l847:	
   347                           
   348                           ;code.c: 14:     char frase [25] = "pqp o thyago é muito foda";
   349  0648  303A               	movlw	main@frase& (0+255)
   350  0649  0084               	movwf	4
   351  064A  3055               	movlw	low main@F486
   352  064B  1283               	bcf	3,5	;RP0=0, select bank0
   353  064C  1303               	bcf	3,6	;RP1=0, select bank0
   354  064D  00B6               	movwf	??_main
   355  064E  0804               	movf	4,w
   356  064F  00B7               	movwf	??_main+1
   357  0650  3019               	movlw	25
   358  0651  00B8               	movwf	??_main+2
   359  0652                     u450:	
   360  0652  0836               	movf	??_main,w
   361  0653  0084               	movwf	4
   362  0654  1383               	bcf	3,7	;select IRP bank0
   363  0655  0800               	movf	0,w
   364  0656  00B9               	movwf	??_main+3
   365  0657  0AB6               	incf	??_main,f
   366  0658  0837               	movf	??_main+1,w
   367  0659  0084               	movwf	4
   368  065A  0839               	movf	??_main+3,w
   369  065B  0080               	movwf	0
   370  065C  0AB7               	incf	??_main+1,f
   371  065D  0BB8               	decfsz	??_main+2,f
   372  065E  2E52               	goto	u450
   373  065F                     l849:	
   374                           
   375                           ;code.c: 16:     for(int i = 0; frase[i] != '\0' ; i++){
   376  065F  01D3               	clrf	main@i
   377  0660  01D4               	clrf	main@i+1
   378  0661  2E7D               	goto	l857
   379  0662                     l851:	
   380                           
   381                           ;code.c: 17:         UART_Write(frase[i]);
   382  0662  0853               	movf	main@i,w
   383  0663  3E3A               	addlw	(low (main@frase| 0))& (0+255)
   384  0664  0084               	movwf	4
   385  0665  0800               	movf	0,w
   386  0666  2609               	fcall	_UART_Write
   387  0667                     l853:	
   388                           
   389                           ;code.c: 18:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   390  0667  300D               	movlw	13
   391  0668  1283               	bcf	3,5	;RP0=0, select bank0
   392  0669  1303               	bcf	3,6	;RP1=0, select bank0
   393  066A  00B8               	movwf	??_main+2
   394  066B  30AF               	movlw	175
   395  066C  00B7               	movwf	??_main+1
   396  066D  30B6               	movlw	182
   397  066E  00B6               	movwf	??_main
   398  066F                     u477:	
   399  066F  0BB6               	decfsz	??_main,f
   400  0670  2E6F               	goto	u477
   401  0671  0BB7               	decfsz	??_main+1,f
   402  0672  2E6F               	goto	u477
   403  0673  0BB8               	decfsz	??_main+2,f
   404  0674  2E6F               	goto	u477
   405  0675                     l855:	
   406                           
   407                           ;code.c: 19:     };
   408  0675  3001               	movlw	1
   409  0676  1283               	bcf	3,5	;RP0=0, select bank0
   410  0677  1303               	bcf	3,6	;RP1=0, select bank0
   411  0678  07D3               	addwf	main@i,f
   412  0679  1803               	skipnc
   413  067A  0AD4               	incf	main@i+1,f
   414  067B  3000               	movlw	0
   415  067C  07D4               	addwf	main@i+1,f
   416  067D                     l857:	
   417  067D  0853               	movf	main@i,w
   418  067E  3E3A               	addlw	(low (main@frase| 0))& (0+255)
   419  067F  0084               	movwf	4
   420  0680  1383               	bcf	3,7	;select IRP bank0
   421  0681  0800               	movf	0,w
   422  0682  1D03               	btfss	3,2
   423  0683  2E85               	goto	u461
   424  0684  2E86               	goto	u460
   425  0685                     u461:	
   426  0685  2E62               	goto	l851
   427  0686                     u460:	
   428  0686                     l61:	
   429  0686  2800               	ljmp	start
   430  0687                     __end_of_main:	
   431                           
   432                           	psect	text1
   433  0609                     __ptext1:	
   434 ;; *************** function _UART_Write *****************
   435 ;; Defined at:
   436 ;;		line 46 in file "./uart.h"
   437 ;; Parameters:    Size  Location     Type
   438 ;;  data            1    wreg     unsigned char 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  data            1    0[COMMON] unsigned char 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   450 ;;      Params:         0       0       0       0
   451 ;;      Locals:         1       0       0       0
   452 ;;      Temps:          0       0       0       0
   453 ;;      Totals:         1       0       0       0
   454 ;;Total ram usage:        1 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;;		_UART_Write_Text
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           
   465                           ;psect for function _UART_Write
   466  0609                     _UART_Write:	
   467                           
   468                           ;incstack = 0
   469                           ; Regs used in _UART_Write: [wreg]
   470                           ;UART_Write@data stored from wreg
   471  0609  00F0               	movwf	UART_Write@data
   472  060A                     l833:	
   473  060A                     l42:	
   474                           ;./uart.h: 47:   while(!TXSTAbits.TRMT);
   475                           
   476  060A  1683               	bsf	3,5	;RP0=1, select bank1
   477  060B  1303               	bcf	3,6	;RP1=0, select bank1
   478  060C  1C98               	btfss	24,1	;volatile
   479  060D  2E0F               	goto	u431
   480  060E  2E10               	goto	u430
   481  060F                     u431:	
   482  060F  2E0A               	goto	l42
   483  0610                     u430:	
   484  0610                     l835:	
   485                           
   486                           ;./uart.h: 48:   TXREG = data;
   487  0610  0870               	movf	UART_Write@data,w
   488  0611  1283               	bcf	3,5	;RP0=0, select bank0
   489  0612  1303               	bcf	3,6	;RP1=0, select bank0
   490  0613  0099               	movwf	25	;volatile
   491  0614                     l45:	
   492  0614  0008               	return
   493  0615                     __end_of_UART_Write:	
   494                           
   495                           	psect	text2
   496  0724                     __ptext2:	
   497 ;; *************** function _UART_Init *****************
   498 ;; Defined at:
   499 ;;		line 4 in file "./uart.h"
   500 ;; Parameters:    Size  Location     Type
   501 ;;  baudrate        4    6[BANK0 ] const long 
   502 ;; Auto vars:     Size  Location     Type
   503 ;;  x               2    9[COMMON] unsigned int 
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      unsigned char 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   513 ;;      Params:         0       4       0       0
   514 ;;      Locals:         2       0       0       0
   515 ;;      Temps:          0      12       0       0
   516 ;;      Totals:         2      16       0       0
   517 ;;Total ram usage:       18 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    1
   520 ;; This function calls:
   521 ;;		___aldiv
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _UART_Init
   529  0724                     _UART_Init:	
   530  0724                     l807:	
   531                           ;incstack = 0
   532                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
   533                           
   534                           
   535                           ;./uart.h: 6:  unsigned int x;;./uart.h: 7:  x = (10000000 - baudrate*64)/(baudrate*64);
   536  0724  1283               	bcf	3,5	;RP0=0, select bank0
   537  0725  1303               	bcf	3,6	;RP1=0, select bank0
   538  0726  0826               	movf	UART_Init@baudrate,w
   539  0727  00AA               	movwf	??_UART_Init
   540  0728  0827               	movf	UART_Init@baudrate+1,w
   541  0729  00AB               	movwf	??_UART_Init+1
   542  072A  0828               	movf	UART_Init@baudrate+2,w
   543  072B  00AC               	movwf	??_UART_Init+2
   544  072C  0829               	movf	UART_Init@baudrate+3,w
   545  072D  00AD               	movwf	??_UART_Init+3
   546  072E  3006               	movlw	6
   547  072F                     u355:	
   548  072F  1003               	clrc
   549  0730  0DAA               	rlf	??_UART_Init,f
   550  0731  0DAB               	rlf	??_UART_Init+1,f
   551  0732  0DAC               	rlf	??_UART_Init+2,f
   552  0733  0DAD               	rlf	??_UART_Init+3,f
   553  0734                     u350:	
   554  0734  3EFF               	addlw	-1
   555  0735  1D03               	skipz
   556  0736  2F2F               	goto	u355
   557  0737  082D               	movf	??_UART_Init+3,w
   558  0738  00F3               	movwf	___aldiv@divisor+3
   559  0739  082C               	movf	??_UART_Init+2,w
   560  073A  00F2               	movwf	___aldiv@divisor+2
   561  073B  082B               	movf	??_UART_Init+1,w
   562  073C  00F1               	movwf	___aldiv@divisor+1
   563  073D  082A               	movf	??_UART_Init,w
   564  073E  00F0               	movwf	___aldiv@divisor
   565  073F  0826               	movf	UART_Init@baudrate,w
   566  0740  00AE               	movwf	??_UART_Init+4
   567  0741  0827               	movf	UART_Init@baudrate+1,w
   568  0742  00AF               	movwf	??_UART_Init+5
   569  0743  0828               	movf	UART_Init@baudrate+2,w
   570  0744  00B0               	movwf	??_UART_Init+6
   571  0745  0829               	movf	UART_Init@baudrate+3,w
   572  0746  00B1               	movwf	??_UART_Init+7
   573  0747  3006               	movlw	6
   574  0748                     u365:	
   575  0748  1003               	clrc
   576  0749  0DAE               	rlf	??_UART_Init+4,f
   577  074A  0DAF               	rlf	??_UART_Init+5,f
   578  074B  0DB0               	rlf	??_UART_Init+6,f
   579  074C  0DB1               	rlf	??_UART_Init+7,f
   580  074D                     u360:	
   581  074D  3EFF               	addlw	-1
   582  074E  1D03               	skipz
   583  074F  2F48               	goto	u365
   584  0750  3080               	movlw	128
   585  0751  00B2               	movwf	??_UART_Init+8
   586  0752  3096               	movlw	150
   587  0753  00B3               	movwf	??_UART_Init+9
   588  0754  3098               	movlw	152
   589  0755  00B4               	movwf	??_UART_Init+10
   590  0756  3000               	movlw	0
   591  0757  00B5               	movwf	??_UART_Init+11
   592  0758  082E               	movf	??_UART_Init+4,w
   593  0759  02B2               	subwf	??_UART_Init+8,f
   594  075A  082F               	movf	??_UART_Init+5,w
   595  075B  1C03               	skipc
   596  075C  0F2F               	incfsz	??_UART_Init+5,w
   597  075D  2F5F               	goto	u371
   598  075E  2F60               	goto	u372
   599  075F                     u371:	
   600  075F  02B3               	subwf	??_UART_Init+9,f
   601  0760                     u372:	
   602  0760  0830               	movf	??_UART_Init+6,w
   603  0761  1C03               	skipc
   604  0762  0F30               	incfsz	??_UART_Init+6,w
   605  0763  2F65               	goto	u373
   606  0764  2F66               	goto	u374
   607  0765                     u373:	
   608  0765  02B4               	subwf	??_UART_Init+10,f
   609  0766                     u374:	
   610  0766  0831               	movf	??_UART_Init+7,w
   611  0767  1C03               	skipc
   612  0768  0F31               	incfsz	??_UART_Init+7,w
   613  0769  2F6B               	goto	u375
   614  076A  2F6C               	goto	u376
   615  076B                     u375:	
   616  076B  02B5               	subwf	??_UART_Init+11,f
   617  076C                     u376:	
   618  076C  0835               	movf	??_UART_Init+11,w
   619  076D  00F7               	movwf	___aldiv@dividend+3
   620  076E  0834               	movf	??_UART_Init+10,w
   621  076F  00F6               	movwf	___aldiv@dividend+2
   622  0770  0833               	movf	??_UART_Init+9,w
   623  0771  00F5               	movwf	___aldiv@dividend+1
   624  0772  0832               	movf	??_UART_Init+8,w
   625  0773  00F4               	movwf	___aldiv@dividend
   626  0774  2687               	fcall	___aldiv
   627  0775  0871               	movf	?___aldiv+1,w
   628  0776  00FA               	movwf	UART_Init@x+1
   629  0777  0870               	movf	?___aldiv,w
   630  0778  00F9               	movwf	UART_Init@x
   631  0779                     l809:	
   632                           
   633                           ;./uart.h: 9:  if(x>255) {
   634  0779  3001               	movlw	1
   635  077A  027A               	subwf	UART_Init@x+1,w
   636  077B  3000               	movlw	0
   637  077C  1903               	skipnz
   638  077D  0279               	subwf	UART_Init@x,w
   639  077E  1C03               	skipc
   640  077F  2F81               	goto	u381
   641  0780  2F82               	goto	u380
   642  0781                     u381:	
   643  0781  2FDA               	goto	l815
   644  0782                     u380:	
   645  0782                     l811:	
   646                           
   647                           ;./uart.h: 10:   x = (10000000 - baudrate*16)/(baudrate*16);
   648  0782  1283               	bcf	3,5	;RP0=0, select bank0
   649  0783  1303               	bcf	3,6	;RP1=0, select bank0
   650  0784  0826               	movf	UART_Init@baudrate,w
   651  0785  00AA               	movwf	??_UART_Init
   652  0786  0827               	movf	UART_Init@baudrate+1,w
   653  0787  00AB               	movwf	??_UART_Init+1
   654  0788  0828               	movf	UART_Init@baudrate+2,w
   655  0789  00AC               	movwf	??_UART_Init+2
   656  078A  0829               	movf	UART_Init@baudrate+3,w
   657  078B  00AD               	movwf	??_UART_Init+3
   658  078C  3004               	movlw	4
   659  078D                     u395:	
   660  078D  1003               	clrc
   661  078E  0DAA               	rlf	??_UART_Init,f
   662  078F  0DAB               	rlf	??_UART_Init+1,f
   663  0790  0DAC               	rlf	??_UART_Init+2,f
   664  0791  0DAD               	rlf	??_UART_Init+3,f
   665  0792                     u390:	
   666  0792  3EFF               	addlw	-1
   667  0793  1D03               	skipz
   668  0794  2F8D               	goto	u395
   669  0795  082D               	movf	??_UART_Init+3,w
   670  0796  00F3               	movwf	___aldiv@divisor+3
   671  0797  082C               	movf	??_UART_Init+2,w
   672  0798  00F2               	movwf	___aldiv@divisor+2
   673  0799  082B               	movf	??_UART_Init+1,w
   674  079A  00F1               	movwf	___aldiv@divisor+1
   675  079B  082A               	movf	??_UART_Init,w
   676  079C  00F0               	movwf	___aldiv@divisor
   677  079D  0826               	movf	UART_Init@baudrate,w
   678  079E  00AE               	movwf	??_UART_Init+4
   679  079F  0827               	movf	UART_Init@baudrate+1,w
   680  07A0  00AF               	movwf	??_UART_Init+5
   681  07A1  0828               	movf	UART_Init@baudrate+2,w
   682  07A2  00B0               	movwf	??_UART_Init+6
   683  07A3  0829               	movf	UART_Init@baudrate+3,w
   684  07A4  00B1               	movwf	??_UART_Init+7
   685  07A5  3004               	movlw	4
   686  07A6                     u405:	
   687  07A6  1003               	clrc
   688  07A7  0DAE               	rlf	??_UART_Init+4,f
   689  07A8  0DAF               	rlf	??_UART_Init+5,f
   690  07A9  0DB0               	rlf	??_UART_Init+6,f
   691  07AA  0DB1               	rlf	??_UART_Init+7,f
   692  07AB                     u400:	
   693  07AB  3EFF               	addlw	-1
   694  07AC  1D03               	skipz
   695  07AD  2FA6               	goto	u405
   696  07AE  3080               	movlw	128
   697  07AF  00B2               	movwf	??_UART_Init+8
   698  07B0  3096               	movlw	150
   699  07B1  00B3               	movwf	??_UART_Init+9
   700  07B2  3098               	movlw	152
   701  07B3  00B4               	movwf	??_UART_Init+10
   702  07B4  3000               	movlw	0
   703  07B5  00B5               	movwf	??_UART_Init+11
   704  07B6  082E               	movf	??_UART_Init+4,w
   705  07B7  02B2               	subwf	??_UART_Init+8,f
   706  07B8  082F               	movf	??_UART_Init+5,w
   707  07B9  1C03               	skipc
   708  07BA  0F2F               	incfsz	??_UART_Init+5,w
   709  07BB  2FBD               	goto	u411
   710  07BC  2FBE               	goto	u412
   711  07BD                     u411:	
   712  07BD  02B3               	subwf	??_UART_Init+9,f
   713  07BE                     u412:	
   714  07BE  0830               	movf	??_UART_Init+6,w
   715  07BF  1C03               	skipc
   716  07C0  0F30               	incfsz	??_UART_Init+6,w
   717  07C1  2FC3               	goto	u413
   718  07C2  2FC4               	goto	u414
   719  07C3                     u413:	
   720  07C3  02B4               	subwf	??_UART_Init+10,f
   721  07C4                     u414:	
   722  07C4  0831               	movf	??_UART_Init+7,w
   723  07C5  1C03               	skipc
   724  07C6  0F31               	incfsz	??_UART_Init+7,w
   725  07C7  2FC9               	goto	u415
   726  07C8  2FCA               	goto	u416
   727  07C9                     u415:	
   728  07C9  02B5               	subwf	??_UART_Init+11,f
   729  07CA                     u416:	
   730  07CA  0835               	movf	??_UART_Init+11,w
   731  07CB  00F7               	movwf	___aldiv@dividend+3
   732  07CC  0834               	movf	??_UART_Init+10,w
   733  07CD  00F6               	movwf	___aldiv@dividend+2
   734  07CE  0833               	movf	??_UART_Init+9,w
   735  07CF  00F5               	movwf	___aldiv@dividend+1
   736  07D0  0832               	movf	??_UART_Init+8,w
   737  07D1  00F4               	movwf	___aldiv@dividend
   738  07D2  2687               	fcall	___aldiv
   739  07D3  0871               	movf	?___aldiv+1,w
   740  07D4  00FA               	movwf	UART_Init@x+1
   741  07D5  0870               	movf	?___aldiv,w
   742  07D6  00F9               	movwf	UART_Init@x
   743  07D7                     l813:	
   744                           
   745                           ;./uart.h: 11:   TXSTAbits.BRGH = 1;
   746  07D7  1683               	bsf	3,5	;RP0=1, select bank1
   747  07D8  1303               	bcf	3,6	;RP1=0, select bank1
   748  07D9  1518               	bsf	24,2	;volatile
   749  07DA                     l815:	
   750                           
   751                           ;./uart.h: 14:  if(x<256) {
   752  07DA  3001               	movlw	1
   753  07DB  027A               	subwf	UART_Init@x+1,w
   754  07DC  3000               	movlw	0
   755  07DD  1903               	skipnz
   756  07DE  0279               	subwf	UART_Init@x,w
   757  07DF  1803               	skipnc
   758  07E0  2FE2               	goto	u421
   759  07E1  2FE3               	goto	u420
   760  07E2                     u421:	
   761  07E2  2FF3               	goto	l21
   762  07E3                     u420:	
   763  07E3                     l817:	
   764                           
   765                           ;./uart.h: 15:         SPBRG = x;
   766  07E3  0879               	movf	UART_Init@x,w
   767  07E4  1683               	bsf	3,5	;RP0=1, select bank1
   768  07E5  1303               	bcf	3,6	;RP1=0, select bank1
   769  07E6  0099               	movwf	25	;volatile
   770  07E7                     l819:	
   771                           
   772                           ;./uart.h: 16:         TXSTAbits.SYNC = 0;
   773  07E7  1218               	bcf	24,4	;volatile
   774  07E8                     l821:	
   775                           
   776                           ;./uart.h: 17:         RCSTAbits.SPEN = 1;
   777  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   778  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   779  07EA  1798               	bsf	24,7	;volatile
   780  07EB                     l823:	
   781                           
   782                           ;./uart.h: 18:         TRISBbits.TRISB1 = 1;
   783  07EB  1683               	bsf	3,5	;RP0=1, select bank1
   784  07EC  1303               	bcf	3,6	;RP1=0, select bank1
   785  07ED  1486               	bsf	6,1	;volatile
   786  07EE                     l825:	
   787                           
   788                           ;./uart.h: 19:         TRISBbits.TRISB2 = 0;
   789  07EE  1106               	bcf	6,2	;volatile
   790  07EF                     l827:	
   791                           
   792                           ;./uart.h: 20:         TXSTAbits.TXEN = 1;
   793  07EF  1698               	bsf	24,5	;volatile
   794  07F0                     l829:	
   795                           
   796                           ;./uart.h: 21:         RCSTAbits.CREN = 1;
   797  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   798  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   799  07F2  1618               	bsf	24,4	;volatile
   800  07F3                     l21:	
   801  07F3  0008               	return
   802  07F4                     __end_of_UART_Init:	
   803                           
   804                           	psect	text3
   805  0687                     __ptext3:	
   806 ;; *************** function ___aldiv *****************
   807 ;; Defined at:
   808 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  divisor         4    0[COMMON] long 
   811 ;;  dividend        4    4[COMMON] long 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  quotient        4    2[BANK0 ] long 
   814 ;;  sign            1    1[BANK0 ] unsigned char 
   815 ;;  counter         1    0[BANK0 ] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  4    0[COMMON] long 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   825 ;;      Params:         8       0       0       0
   826 ;;      Locals:         0       6       0       0
   827 ;;      Temps:          1       0       0       0
   828 ;;      Totals:         9       6       0       0
   829 ;;Total ram usage:       15 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_UART_Init
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function ___aldiv
   840  0687                     ___aldiv:	
   841  0687                     l767:	
   842                           ;incstack = 0
   843                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   844                           
   845  0687  1283               	bcf	3,5	;RP0=0, select bank0
   846  0688  1303               	bcf	3,6	;RP1=0, select bank0
   847  0689  01A1               	clrf	___aldiv@sign
   848  068A                     l769:	
   849  068A  1FF3               	btfss	___aldiv@divisor+3,7
   850  068B  2E8D               	goto	u251
   851  068C  2E8E               	goto	u250
   852  068D                     u251:	
   853  068D  2E9B               	goto	l212
   854  068E                     u250:	
   855  068E                     l771:	
   856  068E  09F0               	comf	___aldiv@divisor,f
   857  068F  09F1               	comf	___aldiv@divisor+1,f
   858  0690  09F2               	comf	___aldiv@divisor+2,f
   859  0691  09F3               	comf	___aldiv@divisor+3,f
   860  0692  0AF0               	incf	___aldiv@divisor,f
   861  0693  1903               	skipnz
   862  0694  0AF1               	incf	___aldiv@divisor+1,f
   863  0695  1903               	skipnz
   864  0696  0AF2               	incf	___aldiv@divisor+2,f
   865  0697  1903               	skipnz
   866  0698  0AF3               	incf	___aldiv@divisor+3,f
   867  0699  01A1               	clrf	___aldiv@sign
   868  069A  0AA1               	incf	___aldiv@sign,f
   869  069B                     l212:	
   870  069B  1FF7               	btfss	___aldiv@dividend+3,7
   871  069C  2E9E               	goto	u261
   872  069D  2E9F               	goto	u260
   873  069E                     u261:	
   874  069E  2EAE               	goto	l777
   875  069F                     u260:	
   876  069F                     l773:	
   877  069F  09F4               	comf	___aldiv@dividend,f
   878  06A0  09F5               	comf	___aldiv@dividend+1,f
   879  06A1  09F6               	comf	___aldiv@dividend+2,f
   880  06A2  09F7               	comf	___aldiv@dividend+3,f
   881  06A3  0AF4               	incf	___aldiv@dividend,f
   882  06A4  1903               	skipnz
   883  06A5  0AF5               	incf	___aldiv@dividend+1,f
   884  06A6  1903               	skipnz
   885  06A7  0AF6               	incf	___aldiv@dividend+2,f
   886  06A8  1903               	skipnz
   887  06A9  0AF7               	incf	___aldiv@dividend+3,f
   888  06AA                     l775:	
   889  06AA  3001               	movlw	1
   890  06AB  00F8               	movwf	??___aldiv
   891  06AC  0878               	movf	??___aldiv,w
   892  06AD  06A1               	xorwf	___aldiv@sign,f
   893  06AE                     l777:	
   894  06AE  3000               	movlw	0
   895  06AF  00A5               	movwf	___aldiv@quotient+3
   896  06B0  3000               	movlw	0
   897  06B1  00A4               	movwf	___aldiv@quotient+2
   898  06B2  3000               	movlw	0
   899  06B3  00A3               	movwf	___aldiv@quotient+1
   900  06B4  3000               	movlw	0
   901  06B5  00A2               	movwf	___aldiv@quotient
   902  06B6                     l779:	
   903  06B6  0873               	movf	___aldiv@divisor+3,w
   904  06B7  0472               	iorwf	___aldiv@divisor+2,w
   905  06B8  0471               	iorwf	___aldiv@divisor+1,w
   906  06B9  0470               	iorwf	___aldiv@divisor,w
   907  06BA  1903               	skipnz
   908  06BB  2EBD               	goto	u271
   909  06BC  2EBE               	goto	u270
   910  06BD                     u271:	
   911  06BD  2F0B               	goto	l799
   912  06BE                     u270:	
   913  06BE                     l781:	
   914  06BE  01A0               	clrf	___aldiv@counter
   915  06BF  0AA0               	incf	___aldiv@counter,f
   916  06C0  2ECE               	goto	l785
   917  06C1                     l783:	
   918  06C1  3001               	movlw	1
   919  06C2  00F8               	movwf	??___aldiv
   920  06C3                     u285:	
   921  06C3  1003               	clrc
   922  06C4  0DF0               	rlf	___aldiv@divisor,f
   923  06C5  0DF1               	rlf	___aldiv@divisor+1,f
   924  06C6  0DF2               	rlf	___aldiv@divisor+2,f
   925  06C7  0DF3               	rlf	___aldiv@divisor+3,f
   926  06C8  0BF8               	decfsz	??___aldiv,f
   927  06C9  2EC3               	goto	u285
   928  06CA  3001               	movlw	1
   929  06CB  00F8               	movwf	??___aldiv
   930  06CC  0878               	movf	??___aldiv,w
   931  06CD  07A0               	addwf	___aldiv@counter,f
   932  06CE                     l785:	
   933  06CE  1FF3               	btfss	___aldiv@divisor+3,7
   934  06CF  2ED1               	goto	u291
   935  06D0  2ED2               	goto	u290
   936  06D1                     u291:	
   937  06D1  2EC1               	goto	l783
   938  06D2                     u290:	
   939  06D2                     l787:	
   940  06D2  3001               	movlw	1
   941  06D3  00F8               	movwf	??___aldiv
   942  06D4                     u305:	
   943  06D4  1003               	clrc
   944  06D5  0DA2               	rlf	___aldiv@quotient,f
   945  06D6  0DA3               	rlf	___aldiv@quotient+1,f
   946  06D7  0DA4               	rlf	___aldiv@quotient+2,f
   947  06D8  0DA5               	rlf	___aldiv@quotient+3,f
   948  06D9  0BF8               	decfsz	??___aldiv,f
   949  06DA  2ED4               	goto	u305
   950  06DB                     l789:	
   951  06DB  0873               	movf	___aldiv@divisor+3,w
   952  06DC  0277               	subwf	___aldiv@dividend+3,w
   953  06DD  1D03               	skipz
   954  06DE  2EE9               	goto	u315
   955  06DF  0872               	movf	___aldiv@divisor+2,w
   956  06E0  0276               	subwf	___aldiv@dividend+2,w
   957  06E1  1D03               	skipz
   958  06E2  2EE9               	goto	u315
   959  06E3  0871               	movf	___aldiv@divisor+1,w
   960  06E4  0275               	subwf	___aldiv@dividend+1,w
   961  06E5  1D03               	skipz
   962  06E6  2EE9               	goto	u315
   963  06E7  0870               	movf	___aldiv@divisor,w
   964  06E8  0274               	subwf	___aldiv@dividend,w
   965  06E9                     u315:	
   966  06E9  1C03               	skipc
   967  06EA  2EEC               	goto	u311
   968  06EB  2EED               	goto	u310
   969  06EC                     u311:	
   970  06EC  2EFC               	goto	l795
   971  06ED                     u310:	
   972  06ED                     l791:	
   973  06ED  0870               	movf	___aldiv@divisor,w
   974  06EE  02F4               	subwf	___aldiv@dividend,f
   975  06EF  0871               	movf	___aldiv@divisor+1,w
   976  06F0  1C03               	skipc
   977  06F1  0F71               	incfsz	___aldiv@divisor+1,w
   978  06F2  02F5               	subwf	___aldiv@dividend+1,f
   979  06F3  0872               	movf	___aldiv@divisor+2,w
   980  06F4  1C03               	skipc
   981  06F5  0F72               	incfsz	___aldiv@divisor+2,w
   982  06F6  02F6               	subwf	___aldiv@dividend+2,f
   983  06F7  0873               	movf	___aldiv@divisor+3,w
   984  06F8  1C03               	skipc
   985  06F9  0F73               	incfsz	___aldiv@divisor+3,w
   986  06FA  02F7               	subwf	___aldiv@dividend+3,f
   987  06FB                     l793:	
   988  06FB  1422               	bsf	___aldiv@quotient,0
   989  06FC                     l795:	
   990  06FC  3001               	movlw	1
   991  06FD                     u325:	
   992  06FD  1003               	clrc
   993  06FE  0CF3               	rrf	___aldiv@divisor+3,f
   994  06FF  0CF2               	rrf	___aldiv@divisor+2,f
   995  0700  0CF1               	rrf	___aldiv@divisor+1,f
   996  0701  0CF0               	rrf	___aldiv@divisor,f
   997  0702  3EFF               	addlw	-1
   998  0703  1D03               	skipz
   999  0704  2EFD               	goto	u325
  1000  0705                     l797:	
  1001  0705  3001               	movlw	1
  1002  0706  02A0               	subwf	___aldiv@counter,f
  1003  0707  1D03               	btfss	3,2
  1004  0708  2F0A               	goto	u331
  1005  0709  2F0B               	goto	u330
  1006  070A                     u331:	
  1007  070A  2ED2               	goto	l787
  1008  070B                     u330:	
  1009  070B                     l799:	
  1010  070B  0821               	movf	___aldiv@sign,w
  1011  070C  1903               	btfsc	3,2
  1012  070D  2F0F               	goto	u341
  1013  070E  2F10               	goto	u340
  1014  070F                     u341:	
  1015  070F  2F1B               	goto	l803
  1016  0710                     u340:	
  1017  0710                     l801:	
  1018  0710  09A2               	comf	___aldiv@quotient,f
  1019  0711  09A3               	comf	___aldiv@quotient+1,f
  1020  0712  09A4               	comf	___aldiv@quotient+2,f
  1021  0713  09A5               	comf	___aldiv@quotient+3,f
  1022  0714  0AA2               	incf	___aldiv@quotient,f
  1023  0715  1903               	skipnz
  1024  0716  0AA3               	incf	___aldiv@quotient+1,f
  1025  0717  1903               	skipnz
  1026  0718  0AA4               	incf	___aldiv@quotient+2,f
  1027  0719  1903               	skipnz
  1028  071A  0AA5               	incf	___aldiv@quotient+3,f
  1029  071B                     l803:	
  1030  071B  0825               	movf	___aldiv@quotient+3,w
  1031  071C  00F3               	movwf	?___aldiv+3
  1032  071D  0824               	movf	___aldiv@quotient+2,w
  1033  071E  00F2               	movwf	?___aldiv+2
  1034  071F  0823               	movf	___aldiv@quotient+1,w
  1035  0720  00F1               	movwf	?___aldiv+1
  1036  0721  0822               	movf	___aldiv@quotient,w
  1037  0722  00F0               	movwf	?___aldiv
  1038  0723                     l222:	
  1039  0723  0008               	return
  1040  0724                     __end_of___aldiv:	
  1041  007E                     btemp	set	126	;btemp
  1042  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        25
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     53      78
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0     951
                                             22 BANK0     31    31      0
                          _UART_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     35      4E       3       97.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      10        0.0%
ABS                  0      0      59       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov 03 14:34:15 2019

                      pc 0002                       l21 07F3                       l42 060A  
                     l45 0614                       l61 0686                       fsr 0004  
                    l212 069B                      l222 0723                      l801 0710  
                    l803 071B                      l811 0782                      l821 07E8  
                    l813 07D7                      l823 07EB                      l815 07DA  
                    l807 0724                      l825 07EE                      l817 07E3  
                    l809 0779                      l833 060A                      l771 068E  
                    l827 07EF                      l819 07E7                      l835 0610  
                    l851 0662                      l781 06BE                      l773 069F  
                    l829 07F0                      l853 0667                      l845 063D  
                    l791 06ED                      l783 06C1                      l775 06AA  
                    l767 0687                      l855 0675                      l847 0648  
                    l793 06FB                      l785 06CE                      l777 06AE  
                    l769 068A                      l857 067D                      l849 065F  
                    l795 06FC                      l787 06D2                      l779 06B6  
                    l797 0705                      l789 06DB                      l799 070B  
                    u310 06ED                      u311 06EC                      u400 07AB  
                    u305 06D4                      u330 070B                      u250 068E  
                    u331 070A                      u315 06E9                      u251 068D  
                    u411 07BD                      u340 0710                      u260 069F  
                    u420 07E3                      u412 07BE                      u341 070F  
                    u325 06FD                      u261 069E                      u421 07E2  
                    u413 07C3                      u405 07A6                      u270 06BE  
                    u414 07C4                      u350 0734                      u430 0610  
                    u271 06BD                      u415 07C9                      u431 060F  
                    u416 07CA                      u360 074D                      u290 06D2  
                    u450 0652                      u291 06D1                      u371 075F  
                    u355 072F                      u380 0782                      u372 0760  
                    u460 0686                      u285 06C3                      u381 0781  
                    u373 0765                      u365 0748                      u461 0685  
                    u390 0792                      u374 0766                      u375 076B  
                    u376 076C                      u395 078D                      u477 066F  
                    fsr0 0004                      indf 0000                     _main 063D  
                   btemp 007E                     start 0000          __end_of___aldiv 0724  
                  ?_main 0070                    _RCREG 001A                    _SPBRG 0099  
                  _TXREG 0019              ?_UART_Write 0070       __size_of_UART_Init 00D0  
                  main@i 0053                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07F4             __end_of_main 0687  
                 ??_main 0036        __end_of_UART_Init 07F4      __size_of_UART_Write 000C  
              ??___aldiv 0078  __end_of__initialization 07FE           __pcstackCOMMON 0070  
           __pidataBANK0 0624               __pmaintext 063D             ??_UART_Write 0070  
                ___aldiv 0687       __end_of_UART_Write 0615                  __ptext1 0609  
                __ptext2 0724                  __ptext3 0687         ___aldiv@dividend 0074  
   end_of_initialization 07FE                _RCSTAbits 0018         ___aldiv@quotient 0022  
              _UART_Init 0724           UART_Write@data 0070                _TRISBbits 0086  
              _TXSTAbits 0098               ?_UART_Init 0026      start_initialization 07F4  
             init_fetch0 0615              __pdataBANK0 0055                ___latbits 0000  
          __pcstackBANK0 0020                 ?___aldiv 0070              ??_UART_Init 002A  
             UART_Init@x 0079          ___aldiv@divisor 0070          ___aldiv@counter 0020  
               _PIR1bits 000C        UART_Init@baudrate 0026                main@frase 003A  
       __size_of___aldiv 009D            __size_of_main 004A                 main@F486 0055  
               init_ram0 0619             ___aldiv@sign 0021               _UART_Write 0609  
