

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov 03 09:16:59 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F628A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  0086                     	;# 
    73  008C                     	;# 
    74  008E                     	;# 
    75  0092                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009F                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  008C                     	;# 
   111  008E                     	;# 
   112  0092                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009F                     	;# 
   120  0005                     _PORTAbits	set	5
   121  0001                     _TMR0	set	1
   122  000B                     _INTCONbits	set	11
   123  0081                     _OPTION_REG	set	129
   124  0085                     _TRISA	set	133
   125                           
   126                           	psect	cinit
   127  000B                     start_initialization:	
   128                           ; #config settings
   129                           
   130  000B                     __initialization:	
   131                           
   132                           ; Clear objects allocated to COMMON
   133  000B  01F0               	clrf	__pbssCOMMON& (0+127)
   134  000C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   135  000D                     end_of_initialization:	
   136                           ;End of C runtime variable initialization code
   137                           
   138  000D                     __end_of__initialization:	
   139  000D  0183               	clrf	3
   140  000E  280F               	ljmp	_main	;jump to C main() function
   141                           
   142                           	psect	bssCOMMON
   143  0070                     __pbssCOMMON:	
   144  0070                     _aux:	
   145  0070                     	ds	2
   146                           
   147                           	psect	cstackCOMMON
   148  0072                     __pcstackCOMMON:	
   149  0072                     ?_timer0:	
   150  0072                     ??_timer0:	
   151                           ; 1 bytes @ 0x0
   152                           
   153  0072                     ?_main:	
   154                           ; 1 bytes @ 0x0
   155                           
   156                           
   157                           ; 1 bytes @ 0x0
   158  0072                     	ds	2
   159  0074                     ??_main:	
   160                           
   161                           	psect	maintext
   162  000F                     __pmaintext:	
   163                           ; 1 bytes @ 0x2
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 21 in file "code.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;		None
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, status,2, status,0
   178 ;; Tracked objects:
   179 ;;		On entry : B00/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   183 ;;      Params:         0       0       0       0
   184 ;;      Locals:         0       0       0       0
   185 ;;      Temps:          0       0       0       0
   186 ;;      Totals:         0       0       0       0
   187 ;;Total ram usage:        0 bytes
   188 ;; Hardware stack levels required when called:    1
   189 ;; This function calls:
   190 ;;		Nothing
   191 ;; This function is called by:
   192 ;;		Startup code after reset
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           
   197                           ;psect for function _main
   198  000F                     _main:	
   199  000F                     l627:	
   200                           ;incstack = 0
   201                           ; Regs used in _main: [wreg+status,2+status,0]
   202                           
   203                           
   204                           ;code.c: 23:     TRISA = 0x00;
   205  000F  1683               	bsf	3,5	;RP0=1, select bank1
   206  0010  1303               	bcf	3,6	;RP1=0, select bank1
   207  0011  0185               	clrf	5	;volatile
   208  0012                     l629:	
   209                           
   210                           ;code.c: 24:     PORTAbits.RA0 = 0x00;
   211  0012  1283               	bcf	3,5	;RP0=0, select bank0
   212  0013  1303               	bcf	3,6	;RP1=0, select bank0
   213  0014  1005               	bcf	5,0	;volatile
   214  0015                     l631:	
   215                           
   216                           ;code.c: 25:     INTCONbits.GIE = 0x01;
   217  0015  178B               	bsf	11,7	;volatile
   218  0016                     l633:	
   219                           
   220                           ;code.c: 26:     INTCONbits.PEIE = 0x01;
   221  0016  170B               	bsf	11,6	;volatile
   222  0017                     l635:	
   223                           
   224                           ;code.c: 27:     INTCONbits.T0IE = 0x01;
   225  0017  168B               	bsf	11,5	;volatile
   226                           
   227                           ;code.c: 28:     TMR0 = 0x00;
   228  0018  0181               	clrf	1	;volatile
   229  0019                     l637:	
   230                           
   231                           ;code.c: 30:     OPTION_REG = 0x82;
   232  0019  3082               	movlw	130
   233  001A  1683               	bsf	3,5	;RP0=1, select bank1
   234  001B  1303               	bcf	3,6	;RP1=0, select bank1
   235  001C  0081               	movwf	1	;volatile
   236  001D                     l639:	
   237                           
   238                           ;code.c: 45:         if (aux == 1000){
   239  001D  30E8               	movlw	232
   240  001E  0670               	xorwf	_aux,w
   241  001F  3003               	movlw	3
   242  0020  1903               	skipnz
   243  0021  0671               	xorwf	_aux+1,w
   244  0022  1D03               	btfss	3,2
   245  0023  2825               	goto	u21
   246  0024  2826               	goto	u20
   247  0025                     u21:	
   248  0025  281D               	goto	l639
   249  0026                     u20:	
   250  0026                     l641:	
   251                           
   252                           ;code.c: 46:             PORTAbits.RA0 = ~PORTAbits.RA0;
   253  0026  1003               	clrc
   254  0027  1283               	bcf	3,5	;RP0=0, select bank0
   255  0028  1303               	bcf	3,6	;RP1=0, select bank0
   256  0029  1C05               	btfss	5,0	;volatile
   257  002A  1403               	setc
   258  002B  1803               	btfsc	3,0
   259  002C  282E               	goto	u31
   260  002D  2832               	goto	u30
   261  002E                     u31:	
   262  002E  1283               	bcf	3,5	;RP0=0, select bank0
   263  002F  1303               	bcf	3,6	;RP1=0, select bank0
   264  0030  1405               	bsf	5,0	;volatile
   265  0031  2835               	goto	u44
   266  0032                     u30:	
   267  0032  1283               	bcf	3,5	;RP0=0, select bank0
   268  0033  1303               	bcf	3,6	;RP1=0, select bank0
   269  0034  1005               	bcf	5,0	;volatile
   270  0035                     u44:	
   271  0035                     l643:	
   272                           
   273                           ;code.c: 47:             aux = 0;
   274  0035  01F0               	clrf	_aux
   275  0036  01F1               	clrf	_aux+1
   276  0037  281D               	goto	l639
   277  0038  280A               	ljmp	start
   278  0039                     __end_of_main:	
   279                           
   280                           	psect	text1
   281  0039                     __ptext1:	
   282 ;; *************** function _timer0 *****************
   283 ;; Defined at:
   284 ;;		line 13 in file "code.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   298 ;;      Params:         0       0       0       0
   299 ;;      Locals:         0       0       0       0
   300 ;;      Temps:          2       0       0       0
   301 ;;      Totals:         2       0       0       0
   302 ;;Total ram usage:        2 bytes
   303 ;; Hardware stack levels used:    1
   304 ;; This function calls:
   305 ;;		Nothing
   306 ;; This function is called by:
   307 ;;		Interrupt level 1
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           
   312                           ;psect for function _timer0
   313  0039                     _timer0:	
   314  0039                     i1l619:	
   315                           
   316                           ;code.c: 14:     if (INTCONbits.T0IF){
   317  0039  1D0B               	btfss	11,2	;volatile
   318  003A  283C               	goto	u1_21
   319  003B  283D               	goto	u1_20
   320  003C                     u1_21:	
   321  003C  2847               	goto	i1l18
   322  003D                     u1_20:	
   323  003D                     i1l621:	
   324                           
   325                           ;code.c: 15:         aux ++;
   326  003D  3001               	movlw	1
   327  003E  07F0               	addwf	_aux,f
   328  003F  1803               	skipnc
   329  0040  0AF1               	incf	_aux+1,f
   330  0041  3000               	movlw	0
   331  0042  07F1               	addwf	_aux+1,f
   332  0043                     i1l623:	
   333                           
   334                           ;code.c: 16:         TMR0 = 0x00;
   335  0043  1283               	bcf	3,5	;RP0=0, select bank0
   336  0044  1303               	bcf	3,6	;RP1=0, select bank0
   337  0045  0181               	clrf	1	;volatile
   338  0046                     i1l625:	
   339                           
   340                           ;code.c: 17:         INTCONbits.T0IF = 0x00;
   341  0046  110B               	bcf	11,2	;volatile
   342  0047                     i1l18:	
   343  0047  0873               	movf	??_timer0+1,w
   344  0048  008A               	movwf	10
   345  0049  0E72               	swapf	??_timer0^(0+4294967168),w
   346  004A  0083               	movwf	3
   347  004B  0EFE               	swapf	btemp,f
   348  004C  0E7E               	swapf	btemp,w
   349  004D  0009               	retfie
   350  004E                     __end_of_timer0:	
   351  007E                     btemp	set	126	;btemp
   352  007E                     wtemp0	set	126
   353                           
   354                           	psect	intentry
   355  0004                     __pintentry:	
   356                           ;incstack = 0
   357                           ; Regs used in _timer0: [wreg+status,2]
   358                           
   359  0004                     interrupt_function:	
   360  007E                     saved_w	set	btemp
   361  0004  00FE               	movwf	btemp
   362  0005  0E03               	swapf	3,w
   363  0006  00F2               	movwf	??_timer0
   364  0007  080A               	movf	10,w
   365  0008  00F3               	movwf	??_timer0+1
   366  0009  2839               	ljmp	_timer0


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timer0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timer0                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timer0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       4      10        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov 03 09:16:59 2019

                     u20 0026                       u21 0025                       u30 0032  
                     u31 002E                       u44 0035                      l631 0015  
                    l641 0026                      l633 0016                      l643 0035  
                    l635 0017                      l627 000F                      l637 0019  
                    l629 0012                      l639 001D                      _aux 0070  
                   i1l18 0047                     _TMR0 0001                     u1_20 003D  
                   u1_21 003C                     _main 000F                     btemp 007E  
                   start 000A                    ?_main 0072                    i1l621 003D  
                  i1l623 0043                    i1l625 0046                    i1l619 0039  
                  _TRISA 0085                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000B             __end_of_main 0039  
                 ??_main 0074                   _timer0 0039                   saved_w 007E  
__end_of__initialization 000D           __pcstackCOMMON 0072               __pmaintext 000F  
             __pintentry 0004                  ?_timer0 0072                  __ptext1 0039  
        __size_of_timer0 0015     end_of_initialization 000D                _PORTAbits 0005  
         __end_of_timer0 004E      start_initialization 000B                 ??_timer0 0072  
            __pbssCOMMON 0070                ___latbits 0000        interrupt_function 0004  
          __size_of_main 002A               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
